---
description: API endpoints and RESTful conventions
---

# API Endpoints & RESTful Guidelines

## API Structure
StockENT follows RESTful API conventions with clear endpoint patterns:

### Base URL
- **Development**: `http://localhost:5001/api`
- **Production**: `https://api.stockent.com/api`

### Authentication Endpoints
```
POST   /api/auth/register          # User registration
POST   /api/auth/login             # User login
POST   /api/auth/google            # Google OAuth
POST   /api/auth/logout            # User logout
POST   /api/auth/refresh           # Token refresh
POST   /api/auth/forgot-password   # Password reset request
POST   /api/auth/reset-password    # Password reset
GET    /api/auth/verify-email      # Email verification
```

### User Management
```
GET    /api/users/profile          # Get user profile
PUT    /api/users/profile          # Update user profile
POST   /api/users/upload-avatar    # Upload profile image
GET    /api/users/:id              # Get user by ID
PUT    /api/users/:id              # Update user (admin)
DELETE /api/users/:id              # Delete user (admin)
```

### Product Management
```
GET    /api/products               # List products with filters
POST   /api/products               # Create product
GET    /api/products/:id           # Get product details
PUT    /api/products/:id           # Update product
DELETE /api/products/:id           # Delete product
POST   /api/products/:id/images    # Upload product images
```

### Auction System
```
GET    /api/auctions               # List active auctions
POST   /api/auctions               # Create auction
GET    /api/auctions/:id           # Get auction details
POST   /api/auctions/:id/bid       # Place bid
GET    /api/auctions/:id/bids      # Get bid history
PUT    /api/auctions/:id           # Update auction
DELETE /api/auctions/:id           # Cancel auction
```

### Messaging System
```
GET    /api/messages/conversations  # List conversations
POST   /api/messages/conversations # Start conversation
GET    /api/messages/:id           # Get conversation messages
POST   /api/messages               # Send message
PUT    /api/messages/:id/read      # Mark as read
```

### Admin Endpoints
```
GET    /api/admin/users            # List all users
GET    /api/admin/products         # List all products
GET    /api/admin/auctions         # List all auctions
GET    /api/admin/analytics        # System analytics
PUT    /api/admin/users/:id/verify # Verify user
DELETE /api/admin/users/:id        # Delete user
```

## HTTP Status Codes
- **200 OK**: Successful GET, PUT, PATCH
- **201 Created**: Successful POST
- **204 No Content**: Successful DELETE
- **400 Bad Request**: Invalid request data
- **401 Unauthorized**: Authentication required
- **403 Forbidden**: Insufficient permissions
- **404 Not Found**: Resource not found
- **409 Conflict**: Resource conflict
- **422 Unprocessable Entity**: Validation errors
- **429 Too Many Requests**: Rate limit exceeded
- **500 Internal Server Error**: Server error

## Request/Response Format

### Request Headers
```
Content-Type: application/json
Authorization: Bearer <jwt-token>
X-Requested-With: XMLHttpRequest
```

### Response Format
```json
{
  "success": true,
  "data": { ... },
  "message": "Success message",
  "meta": {
    "pagination": { ... },
    "timestamp": "2024-01-01T00:00:00Z"
  }
}
```

### Error Response Format
```json
{
  "success": false,
  "error": {
    "code": "VALIDATION_ERROR",
    "message": "Invalid input data",
    "details": { ... }
  },
  "timestamp": "2024-01-01T00:00:00Z"
}
```

## Query Parameters
- **Pagination**: `?page=1&limit=20`
- **Sorting**: `?sort=createdAt&order=desc`
- **Filtering**: `?category=textiles&status=active`
- **Search**: `?q=search-term`
- **Date Range**: `?startDate=2024-01-01&endDate=2024-12-31`

## Rate Limiting
- **General API**: 100 requests per 15 minutes
- **Authentication**: 5 attempts per 15 minutes
- **File Upload**: 10 uploads per hour
- **Messaging**: 50 messages per hour

## API Documentation
- **Swagger/OpenAPI**: Available at `/api/docs`
- **Health Check**: `/api/health`
- **Redis Status**: `/api/redis-status`