name: Deploy StockENT

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Backend deployment job
  deploy-backend:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
        
    - name: Install backend dependencies
      run: |
        cd backend
        npm ci
        
    - name: Run backend tests
      run: |
        cd backend
        npm test
      continue-on-error: false
        
    - name: Build backend
      run: |
        cd backend
        npm run build
      continue-on-error: false
        
    - name: Deploy backend to production
      run: |
        echo "Deploying backend to production server"
        # Add your deployment commands here
        # Example: scp, rsync, or cloud provider CLI commands
        
  # Frontend deployment job
  deploy-frontend:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci
        
    - name: Run frontend tests
      run: |
        cd frontend
        npm test
      continue-on-error: false
        
    - name: Build frontend
      run: |
        cd frontend
        npm run build
      continue-on-error: false
        
    - name: Deploy frontend to production
      run: |
        echo "Deploying frontend to production server"
        # Add your deployment commands here
        # Example: scp, rsync, or cloud provider CLI commands

  # Database migration job
  migrate-database:
    runs-on: ubuntu-latest
    environment: production
    needs: [deploy-backend]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
        
    - name: Install backend dependencies
      run: |
        cd backend
        npm ci
        
    - name: Run database migrations
      run: |
        cd backend
        npx prisma migrate deploy
      env:
        # Note: DATABASE_URL secret must be configured in repository settings
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        NODE_ENV: production
